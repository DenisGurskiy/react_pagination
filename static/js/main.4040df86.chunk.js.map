{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","_ref","total","perPage","currentPage","onPageChange","totalPage","Math","ceil","pages","i","push","_jsxs","className","children","_jsx","cn","disabled","href","onClick","handlePagePrev","map","page","active","concat","handlePageChanger","handlePageNext","items","from","to","numbers","n","getNumbers","length","App","setPerPage","useState","setCurrentPage","startItem","endItemCalculation","endItem","visibleItem","splice","id","value","onChange","event","handlePerPage","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4040df86.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { PerPage } from '../../types/PerPage';\n\ntype Props = {\n  total: number;\n  perPage: PerPage;\n  currentPage: number;\n  onPageChange: (a: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const totalPage = Math.ceil(total / +perPage);\n\n  const pages = [];\n\n  for (let i = 1; i <= totalPage; i += 1) {\n    pages.push(i);\n  }\n\n  const handlePageChanger = (page: number) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePagePrev = () => {\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handlePageNext = () => {\n    if (currentPage !== totalPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={handlePagePrev}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', {\n            active: currentPage === page,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChanger(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn('page-item', {\n          disabled: currentPage === totalPage,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === totalPage ? 'true' : 'false'}\n          onClick={handlePageNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\nimport { PerPage } from './types/PerPage';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42).map(n => `Item ${n}`);\nconst total = items.length;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<PerPage>('5');\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startItem = +perPage * (currentPage - 1) + 1;\n  const endItemCalculation = +perPage * currentPage;\n  const endItem = endItemCalculation > total ? total : endItemCalculation;\n\n  const visibleItem = [...items].splice(startItem - 1, +perPage);\n\n  const handlePerPage = (value: PerPage) => {\n    setPerPage(value);\n    setCurrentPage(1);\n  };\n\n  const handleCurrentPage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page {currentPage} (items {startItem} - {endItem} of {items.length})\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            value={perPage}\n            className=\"form-control\"\n            onChange={event => handlePerPage(event.target.value as PerPage)}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleCurrentPage}\n      />\n\n      <ul>\n        {visibleItem.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}